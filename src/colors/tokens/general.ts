import type { ThemePalette, TokenColor } from "@/types"

export function getGeneralCodeTokens(palette: ThemePalette): TokenColor[] {
  return [
    {
      name: "Comments",
      scope: ["comment", "punctuation.definition.comment"],
      settings: { foreground: palette.commentAlpha94 },
    },
    {
      name: "Variables, Default Text, CSS Properties, JS Methods, Decorators",
      scope: [
        "variable",
        "string constant.other.placeholder",
        "constant.other.color",
        "meta.block variable.other",
        "support.other.variable",
        "string.other.link",
        "source.css support.type.property-name",
        "source.sass support.type.property-name",
        "source.scss support.type.property-name",
        "source.less support.type.property-name",
        "source.stylus support.type.property-name",
        "source.postcss support.type.property-name",
        "support.type.vendored.property-name.css",
        "source.css.scss entity.name.tag",
        "variable.parameter.keyframe-list.css",
        "meta.property-name.css",
        "variable.parameter.url.scss",
        "meta.property-value.scss",
        "meta.property-value.css",
        "entity.name.method.js",
        "meta.class-method.js entity.name.function.js",
        "variable.function.constructor",
        "tag.decorator.js entity.name.tag.js",
        "tag.decorator.js punctuation.definition.tag.js",
      ],
      settings: { foreground: palette.foregroundPrimary },
    },
    {
      name: "Keywords, Operators, Punctuation, Attributes, RegEx, Language Variables",
      scope: [
        "keyword",
        "storage.type",
        "storage.modifier",
        "keyword.control",
        "punctuation.definition.tag",
        "punctuation.separator.inheritance.php",
        "punctuation.definition.tag.html",
        "punctuation.definition.tag.begin.html",
        "punctuation.definition.tag.end.html",
        "punctuation.section.embedded",
        "keyword.other.template",
        "keyword.other.substitution",
        "variable.language",
        "entity.other.attribute-name",
        "meta.property-list.scss",
        "entity.other.keyframe-offset.css",
        "meta.selector.css",
        "entity.name.tag.reference.scss",
        "entity.name.tag.nesting.css",
        "punctuation.separator.key-value.css",
        "markup.changed",
        "string.regexp",
        "constant.character.escape",
      ],
      settings: { foreground: palette.greyLight },
    },
    {
      name: "Tags, Functions, Numbers, Constants, Classes, HTML Attributes",
      scope: [
        "entity.name.tag",
        "meta.tag.sgml",
        "markup.deleted.git_gutter",
        "entity.name.function",
        "variable.function",
        "support.function",
        "keyword.other.special-method",
        "constant.numeric",
        "support.constant",
        "constant.character",
        "constant.escape",
        "keyword.other.unit",
        "keyword.other",
        "constant.language.boolean",
        "entity.name",
        "support.type",
        "support.class",
        "support.other.namespace.use.php",
        "meta.use.php",
        "support.other.namespace.php",
        "markup.changed.git_gutter",
        "support.type.sys-types",
        "text.html.basic entity.other.attribute-name.html",
        "text.html.basic entity.other.attribute-name",
        "entity.other.attribute-name.class",
        "entity.other.attribute-name.id",
        "meta.attribute-selector.scss",
        "variable.parameter.misc.css",
      ],
      settings: { foreground: palette.accentPrimary },
    },
    {
      name: "Strings, Symbols, CSS IDs (Sass), Inserted Markup",
      scope: [
        "string",
        "constant.other.symbol",
        "constant.other.key",
        "meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js",
        "source.sass keyword.control",
        "markup.inserted",
      ],
      settings: { foreground: palette.accentSecondary },
    },
    {
      name: "Invalid, JS Sub-methods, Deleted Markup",
      scope: [
        "invalid",
        "invalid.illegal",
        "entity.name.module.js",
        "variable.import.parameter.js",
        "variable.other.class.js",
        "markup.deleted",
      ],
      settings: { foreground: palette.error },
    },
  ]
}
